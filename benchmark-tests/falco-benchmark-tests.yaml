apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-event-generator
  namespace: benchmark
  labels:
    app: falco-event-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: falco-event-generator
  template:
    metadata:
      labels:
        app: falco-event-generator
    spec:
      nodeSelector:
        node-role.kubernetes.io/benchmark: "true"
      containers:
      - name: falco-event-generator
        securityContext:
          {}
        image: "falcosecurity/event-generator:latest"
        imagePullPolicy: IfNotPresent
        command:
          - /bin/event-generator
          - run
          - ^syscall
          - --loop
        env:
        - name: FALCO_EVENT_GENERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: benchmark
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        node-role.kubernetes.io/benchmark: "true"
      containers:
        - name: redis-app
          image: redis:7.2.3-alpine
          ports:
            - containerPort: 6379 # default redis port
        # https://redis.io/docs/management/optimization/benchmarks/
        # redis-benchmark-* containers are in same pod w/ shared network namespace
        # Run in safety infinite loop in addition to using -l flag
        - name: redis-benchmark-1
          image: redis:7.2.3-alpine
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              while true; do
                redis-benchmark -h localhost -l -n 100 -c 4;
                sleep 5;
              done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stress-ng
  namespace: benchmark
  labels:
    app: stress-ng
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stress-ng
  template:
    metadata:
      labels:
        app: stress-ng
    spec:
      nodeSelector:
        node-role.kubernetes.io/benchmark: "true"
      containers:
      # https://wiki.ubuntu.com/Kernel/Reference/stress-ng
      - name: stress-ng-1
        image: ubuntu:22.04
        command: ["/bin/bash", "-c"]
        args:
        - |
          apt-get update &&
          apt-get install -y stress-ng &&
          while true; do
            stress-ng --matrix 1 -t 1m
            sleep 5
          done
